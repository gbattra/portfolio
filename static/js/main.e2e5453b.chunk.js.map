{"version":3,"sources":["logo.svg","App.js","serviceWorker.js","index.js"],"names":["module","exports","ME_BLOCK","imagePath","href","header","subheader","description","skills","PROJECTS","App","className","Grid","relaxed","padded","columns","verticalAlign","rows","row","sort","Math","random","unshift","map","project","i","push","length","PROJECTS_ROWS","Row","key","j","Column","Card","link","Image","src","wrapped","ui","Content","textAlign","Header","Meta","Description","extra","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.e2e5453b.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","import React from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport { Card, Icon, Image, Grid } from 'semantic-ui-react'\n\nconst NUM_COL = 4;\n\nconst ME_BLOCK = {\n  imagePath: 'assets/images/me2.jpg',\n  href: 'https://github.com/gbattra',\n  header: 'Greg Attra',\n  subheader: 'Me!',\n  description: '',\n  skills: 'Deep Learning Engineer, System Architect, Software Engineer, Data Scientist'\n}\n\nconst PROJECTS = [\n  {\n    imagePath: 'assets/images/VAE.png',\n    href: 'https://github.com/gbattra/MNIST_VAE',\n    header: 'MNIST VAE',\n    subheader: 'A VAE to generate MNIST samples / Tensorflow',\n    description: '',\n    skills: 'Python, Tensorflow, CNN, VAE'\n  },\n  {\n    imagePath: 'assets/images/GANs.png',\n    href: 'https://github.com/gbattra/GANsProject',\n    header: 'MNIST GANs',\n    subheader: 'A first attempt at a GANs model using Tensorflow',\n    description: '',\n    skills: 'Python, Tensorflow, CNN, GANs'\n  },\n  {\n    imagePath: 'assets/images/ML.jpg',\n    href: 'https://github.com/gbattra/ML_Framework',\n    header: 'ML Framework',\n    subheader: 'A machine learning framework hacked together with Numpy',\n    description: '',\n    skills: 'Python, Numpy, Linear & Logistic Regression'\n  },\n  {\n    imagePath: 'assets/images/SML.png',\n    href: 'https://github.com/gbattra/machine_learning',\n    header: 'Stanford Machine Learning Projects',\n    subheader: 'Projects completed for the Stanford Machine Learning MOOC',\n    description: '',\n    skills: 'Matlab, NN, SVM, KMeans, PCA'\n  },\n  {\n    imagePath: 'assets/images/Generator.png',\n    href: 'https://github.com/gbattra/Generator_ML_Framework',\n    header: 'Generator ML Framework',\n    subheader: 'POC for Generative AI algorithm',\n    description: '',\n    skills: 'Python, Numpy, OOP, Linear Algebra'\n  },\n  {\n    imagePath: 'assets/images/Portfolio.png',\n    href: 'https://github.com/gbattra/portfolio',\n    header: 'Portfolio Website',\n    subheader: 'Light React app for this very Portfolio webpage',\n    description: '',\n    skills: 'Javascript, React, HTML/CSS, Semantic UI'\n  },\n  {\n    imagePath: 'assets/images/PaintMe.jpg',\n    href: 'https://github.com/gbattra/paint-me-v2',\n    header: 'Paint Me',\n    subheader: 'NST-based webapp for generating AI art',\n    description: '',\n    skills: 'Python, Tensorflow, NST, Django, Flask, Pub/Sub, GCP'\n  },\n  {\n    imagePath: 'assets/images/Unity.png',\n    href: 'https://github.com/gbattra/HexDodge',\n    header: 'HexDodge',\n    subheader: 'iOS game built in Unity',\n    description: '',\n    skills: 'Unity, C#, Linear Algebra, 3D Graphics'\n  },\n  {\n    imagePath: 'assets/images/Streetview.png',\n    href: 'https://github.com/gbattra/StreetviewHouseNumberDetector',\n    header: 'Street View House Number Detector',\n    subheader: 'CNN for street-view house number detection and classification',\n    description: '',\n    skills: 'Unity, C#, Linear Algebra, 3D Graphics'\n  },\n  {\n    imagePath: 'assets/images/NN.png',\n    href: 'https://github.com/gbattra/NeuralNetwork',\n    header: 'Simple Neural Network',\n    subheader: '3 layer neural network to predict presence and type of Arrhythmia in patients',\n    description: '',\n    skills: 'Python, Numpy, Pandas, Matplotlib'\n  },\n  {\n    imagePath: 'assets/images/LogisticRegression.png',\n    href: 'https://github.com/gbattra/LogisticRegression',\n    header: 'Simple Logisitc Regression',\n    subheader: 'A logistic regression model to classify types of cancer and skin conditions',\n    description: '',\n    skills: 'Python, Numpy, Pandas, Matplotlib'\n  },\n  {\n    imagePath: 'assets/images/LinearRegression.png',\n    href: 'https://github.com/gbattra/LinearRegression',\n    header: 'Simple Linear Regression',\n    subheader: 'A linear regression model for bike rentalss',\n    description: '',\n    skills: 'Python, Numpy, Pandas, Matplotlib'\n  }\n]\n\nfunction PROJECTS_ROWS() {\n  var rows = [];\n  var row = [];\n\n  PROJECTS.sort(() =>{\n    return .5 - Math.random();\n  }).unshift(ME_BLOCK);\n\n  PROJECTS.map((project, i) => {\n    row.push(project);\n    if (row.length === NUM_COL || i == PROJECTS.length - 1) {\n      rows.push(row);\n      row = []\n    }\n  })\n\n  return rows;\n}\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Grid\n        relaxed\n        padded\n        columns='equal'\n        verticalAlign='middle'>\n        {PROJECTS_ROWS().map((row, i) => {\n          return (\n            <Grid.Row columns={NUM_COL} key={i}>\n              {row.map((project, j) => {\n                return (\n                  <Grid.Column key={j}>\n                    <Card link href={project.href}>\n                      <Image src={project.imagePath} wrapped ui={false} />\n                      <Card.Content textAlign={'left'}>\n                        <Card.Header>{project.header}</Card.Header>\n                        <Card.Meta>\n                          <span className='date'>{project.subheader}</span>\n                        </Card.Meta>\n                        <Card.Description>\n                          {project.description}\n                        </Card.Description>\n                      </Card.Content>\n                      <Card.Content extra textAlign={'left'}>\n                        <a>\n                          {project.skills}\n                        </a>\n                      </Card.Content>\n                    </Card>\n                  </Grid.Column>\n                )\n              })}\n            </Grid.Row>\n          )\n        })}\n      </Grid>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport 'semantic-ui-css/semantic.min.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}